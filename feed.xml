<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://yuxilong.github.io//</id><title>Fish.</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2025-07-02T14:02:28+08:00</updated> <author> <name>yuxilong</name> <uri>https://yuxilong.github.io//</uri> </author><link rel="self" type="application/atom+xml" href="https://yuxilong.github.io//feed.xml"/><link rel="alternate" type="text/html" hreflang="zh-CN" href="https://yuxilong.github.io//"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2025 yuxilong </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>安卓百度加固脱壳还原记录</title><link href="https://yuxilong.github.io//posts/%E5%AE%89%E5%8D%93%E7%99%BE%E5%BA%A6%E5%8A%A0%E5%9B%BA%E8%84%B1%E5%A3%B3%E8%BF%98%E5%8E%9F%E8%AE%B0%E5%BD%95/" rel="alternate" type="text/html" title="安卓百度加固脱壳还原记录" /><published>2024-12-27T11:13:20+08:00</published> <updated>2024-12-27T11:13:20+08:00</updated> <id>https://yuxilong.github.io//posts/%E5%AE%89%E5%8D%93%E7%99%BE%E5%BA%A6%E5%8A%A0%E5%9B%BA%E8%84%B1%E5%A3%B3%E8%BF%98%E5%8E%9F%E8%AE%B0%E5%BD%95/</id> <content src="https://yuxilong.github.io//posts/%E5%AE%89%E5%8D%93%E7%99%BE%E5%BA%A6%E5%8A%A0%E5%9B%BA%E8%84%B1%E5%A3%B3%E8%BF%98%E5%8E%9F%E8%AE%B0%E5%BD%95/" /> <author> <name>yuxilong</name> </author> <category term="逆向记录" /> <summary> 使用的工具 BlackDex MT管理器 jadx 提取安装包 使用BlackDex脱壳 使用`MT管理器对比删除文件 1、删除百度加固文件 assets目录下 lib/arm64-v8a目录下 对比原apk中的dex文件 把脱壳出来的跟原apk中大小一致的删掉 3、使用jdax-ui打开脱壳出来的dex文件 把包含sagittarius包名所在的dex文件删除 4、重命名脱壳出来的dex文件 5、修复脱壳出来的dex文件 6、添加到原apk中 7、替换中AndroidManifest.xml的应用程序入口 使用jadx-gui打开未脱壳的apk文件搜索AppInfo类获取应用程序原始入口 替换AndroidManifest.xml中的com.sagittarius.v6.StubApplication为上... </summary> </entry> <entry><title>iOS中Flutter应用逆向方法</title><link href="https://yuxilong.github.io//posts/iOS%E4%B8%ADFlutter%E5%BA%94%E7%94%A8%E9%80%86%E5%90%91%E6%96%B9%E6%B3%95/" rel="alternate" type="text/html" title="iOS中Flutter应用逆向方法" /><published>2024-07-17T16:32:21+08:00</published> <updated>2024-07-17T16:32:21+08:00</updated> <id>https://yuxilong.github.io//posts/iOS%E4%B8%ADFlutter%E5%BA%94%E7%94%A8%E9%80%86%E5%90%91%E6%96%B9%E6%B3%95/</id> <content src="https://yuxilong.github.io//posts/iOS%E4%B8%ADFlutter%E5%BA%94%E7%94%A8%E9%80%86%E5%90%91%E6%96%B9%E6%B3%95/" /> <author> <name>yuxilong</name> </author> <category term="逆向记录" /> <summary> 安装reflutter 参考地址：reFlutter pip3 install reflutter 使用 # 重打包 完成后重签名后安装到iOS设备上即可 reflutter xxx.ipa 使用Charles抓包 Charles监听端口设置为8083即可 查看dump出的dart文件 重签名安装后将iOS设备连接到Mac上，可在macOS的控制台看到iOS设备的实时日志。 增加过滤条件Current working dir:即可。 例如： /private/var/mobile/Containers/Data/Application/&amp;lt;UUID&amp;gt;/dump.dart </summary> </entry> <entry><title>iOS越狱deb插件重打包</title><link href="https://yuxilong.github.io//posts/iOS%E8%B6%8A%E7%8B%B1deb%E6%8F%92%E4%BB%B6%E9%87%8D%E6%89%93%E5%8C%85/" rel="alternate" type="text/html" title="iOS越狱deb插件重打包" /><published>2024-07-07T14:14:20+08:00</published> <updated>2024-07-07T14:14:20+08:00</updated> <id>https://yuxilong.github.io//posts/iOS%E8%B6%8A%E7%8B%B1deb%E6%8F%92%E4%BB%B6%E9%87%8D%E6%89%93%E5%8C%85/</id> <content src="https://yuxilong.github.io//posts/iOS%E8%B6%8A%E7%8B%B1deb%E6%8F%92%E4%BB%B6%E9%87%8D%E6%89%93%E5%8C%85/" /> <author> <name>yuxilong</name> </author> <category term="逆向记录" /> <summary> 解压 mkdir package dpkg -x xxx.deb ./package dpkg -e xxx.deb ./package/DEBIAN 压缩 dpkg-deb -b ./package xxx_new.deb </summary> </entry> <entry><title>Cocos2d-Lua手游逆向记录</title><link href="https://yuxilong.github.io//posts/Cocos2d-Lua%E6%89%8B%E6%B8%B8%E9%80%86%E5%90%91%E8%AE%B0%E5%BD%95/" rel="alternate" type="text/html" title="Cocos2d-Lua手游逆向记录" /><published>2023-07-24T14:14:20+08:00</published> <updated>2024-05-22T17:18:09+08:00</updated> <id>https://yuxilong.github.io//posts/Cocos2d-Lua%E6%89%8B%E6%B8%B8%E9%80%86%E5%90%91%E8%AE%B0%E5%BD%95/</id> <content src="https://yuxilong.github.io//posts/Cocos2d-Lua%E6%89%8B%E6%B8%B8%E9%80%86%E5%90%91%E8%AE%B0%E5%BD%95/" /> <author> <name>yuxilong</name> </author> <category term="逆向记录" /> <summary> Lua5.1 luaL_loadbuffer 函数原型 LUALIB_API int luaL_loadbuffer (lua_State *L, const char *buff, size_t size, const char *name) { LoadS ls; ls.s = buff; ls.size = size; return lua_load(L, getS, &amp;amp;ls, name); } 特征码 FF 83 00 D1 FD 7B 01 A9 FD 43 00 91 E1 0B 00 A9 ?? ?? ?? ?? ?? ?? ?? ?? E2 03 00 91 ?? ?? ?? ?? FD luaU_undump 函数原型 /* ** load precompil... </summary> </entry> <entry><title>加密算法特征</title><link href="https://yuxilong.github.io//posts/%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E7%89%B9%E5%BE%81/" rel="alternate" type="text/html" title="加密算法特征" /><published>2023-07-11T11:28:20+08:00</published> <updated>2023-07-11T11:28:20+08:00</updated> <id>https://yuxilong.github.io//posts/%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E7%89%B9%E5%BE%81/</id> <content src="https://yuxilong.github.io//posts/%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E7%89%B9%E5%BE%81/" /> <author> <name>yuxilong</name> </author> <category term="加解密" /> <summary> SHA256 int crypto_hash_sha256_init(crypto_hash_sha256_state *state) { // 大常数 static const uint32_t sha256_initial_state[8] = { 0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19 }; ... </summary> </entry> </feed>
